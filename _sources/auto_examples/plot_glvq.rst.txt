

.. _sphx_glr_auto_examples_plot_glvq.py:


========================================
Generalized Learning Vector Quantization
========================================
This example shows the different glvq algorithms and how they project
different data sets. The data sets are chosen to show the strength of each
algorithm. Each plot shows for each data point which class it belongs to
(big circle) and which class it was classified to (smaller circle). It also
shows the prototypes (light blue circle). The projected data is shown in the
right plot.





.. image:: /auto_examples/images/sphx_glr_plot_glvq_001.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

    GLVQ:
    classification accuracy: 1.0




|


.. code-block:: python

    import numpy as np
    import matplotlib.pyplot as plt

    from glvq import GlvqModel

    print(__doc__)

    nb_ppc = 100
    print('GLVQ:')
    toy_data = np.append(
        np.random.multivariate_normal([0, 0], np.eye(2) / 2, size=nb_ppc),
        np.random.multivariate_normal([5, 0], np.eye(2) / 2, size=nb_ppc), axis=0)
    toy_label = np.append(np.zeros(nb_ppc), np.ones(nb_ppc), axis=0)

    glvq = GlvqModel()
    glvq.fit(toy_data, toy_label)
    pred = glvq.predict(toy_data)

    f = plt.figure(1)
    plt.scatter(toy_data[:, 0], toy_data[:, 1], c=toy_label)
    plt.scatter(toy_data[:, 0], toy_data[:, 1], c=pred, marker='.')
    plt.scatter(glvq.w_[:, 0], glvq.w_[:, 1])
    plt.axis('equal')
    f.show()

    print('classification accuracy:', glvq.score(toy_data, toy_label))
    plt.show()

**Total running time of the script:** ( 0 minutes  0.289 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_glvq.py <plot_glvq.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_glvq.ipynb <plot_glvq.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
